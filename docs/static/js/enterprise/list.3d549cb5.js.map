{"version":3,"file":"static/js/enterprise/list.3d549cb5.js","mappings":"4QAeMA,EAAcC,EAAQ,MAE5B,SAASC,EAAUC,GACjB,IACEC,EAMED,EANFC,IACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,UAHF,EAOIH,EAHFI,KAAAA,OAJF,WAOIJ,EAFFK,WAAAA,OALF,MAKeR,EALf,EAMKS,GANL,OAOIN,EAPJ,GASA,OACE,gCACEC,IAAKI,EACL,WAAUJ,EACV,cAAaC,GACTI,GAJN,IAKEH,UAAWI,GAAAA,CAAGJ,EAAW,CAAEK,SAAUJ,OAK3C,OAAeK,EAAAA,EAAAA,MAAKV,I,wGC5BpB,SAASW,EAAQV,GACf,IAAQW,EAAyBX,EAAzBW,KAAR,EAAiCX,EAAnBG,UAAAA,OAAd,MAA0B,GAA1B,EAEA,OACE,oBACEA,UAAS,UAAKA,EAAL,yHADX,UAGE,gBAAKA,UAAU,wBAAf,gBACGQ,QADH,IACGA,OADH,EACGA,EAAMC,KAAI,SAACC,GAAD,OACT,eAEEC,KAAI,UAAKC,OAAOC,SAASC,QAArB,OAA8BC,SAA9B,wCAAoFL,EAAKM,MAC7FhB,UAAU,uGAHZ,WAKE,gBAAKA,UAAU,+FAAf,UACE,SAACJ,EAAA,EAAD,CAAWE,IAAKY,EAAKO,IAAKC,IAAKR,EAAKO,SAEtC,iBAAKjB,UAAU,uDAAf,WACE,gBAAKA,UAAU,8CAAf,SACGU,EAAKS,SAER,gBAAKnB,UAAU,mCAAf,SACGU,EAAKU,eAZLV,EAAKM,aAsBtB,OAAeV,EAAAA,EAAAA,MAAKC,G,mBChCpB,SAASc,EAAWxB,GAClB,IAAQyB,EAA4CzB,EAA5CyB,UAAWC,EAAiC1B,EAAjC0B,QAASC,EAAwB3B,EAAxB2B,aAAcC,EAAU5B,EAAV4B,MACpCC,GAAeC,EAAAA,EAAAA,QAAOL,GAC5BI,EAAaH,QAAUD,EACvB,IAAMM,GAAQC,EAAAA,EAAAA,UAAQ,kBAAM,IAAIC,MAAMR,GAAWS,KAAK,KAAI,CAACT,IACrDU,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACC,IAAMC,EAAOC,OAAOF,EAAEG,OAAOC,QAAQH,MAEjCA,GAAQ,GAAKA,GAAQT,EAAaH,SACpCC,EAAaW,EAAMV,KAGvB,CAACD,EAAcC,IAEjB,OACE,gBAAK,aAAW,YAAhB,UACE,gBACEzB,UAAU,sDACVuC,QAASP,EAFX,WAIE,eACEhC,UAAWI,GAAAA,CAAG,uBAAwB,CACpC,qBAAkC,IAAZmB,IAExB,YAAWA,EAAU,EAJvB,kBAQCK,EAAMnB,KAAI,SAACC,EAAM8B,GAAP,OACT,eAEE,YAAWA,EAAQ,EACnBxC,UAAWI,GAAAA,CAAG,CACZ,mBAAoBoC,EAAQ,IAAMjB,EAClC,uBAAwBiB,EAAQ,IAAMjB,IAL1C,SAQGiB,EAAQ,GAPJA,EAAQ,OAUjB,eACExC,UAAWI,GAAAA,CAAG,uBAAwB,CACpC,qBAAsBmB,IAAYD,IAEpC,YAAWC,EAAU,EAJvB,uBAaR,OAAejB,EAAAA,EAAAA,MAAKe,GC1DdoB,EAAS,SAAC5C,GACd,IAAQ6C,EAA8B7C,EAA9B6C,UAAR,EAAsC7C,EAAnBG,UAAAA,OAAnB,MAA+B,GAA/B,EAEA,OAAI0C,GACK,cAAG1C,UAAS,UAAKA,EAAL,wCAEd,MAGT,GAAeM,EAAAA,EAAAA,MAAKmC,GCFpB,SAASE,IACP,IAAMC,EAAS,IAAIC,gBAAgBjC,OAAOC,SAASiC,KAAKC,QAAQ,IAAK,KAC/DC,EAAaZ,OAAOQ,EAAOK,IAAI,UAAY,EAC3CC,EAAcd,OAAOQ,EAAOK,IAAI,WAAa,GACnD,GAAwBE,EAAAA,EAAAA,UAASH,GAAjC,eAAOb,EAAP,KAAaiB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAASD,GAAnC,eAAOzB,EAAP,KAAc4B,EAAd,KACA,GAAgCF,EAAAA,EAAAA,YAAhC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,UAAiB,GAAnD,eAAO7B,EAAP,KAAkBkC,EAAlB,KACA,GAA8BL,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAER,SAASC,IACP,IAAMhB,EAAS,IAAIC,gBAAgBjC,OAAOC,SAASiC,KAAKC,QAAQ,IAAK,KAC/DZ,EAAOC,OAAOQ,EAAOK,IAAI,UAAY,EACrCxB,EAAQW,OAAOQ,EAAOK,IAAI,WAAa,GAC7CG,EAAQjB,GACRkB,EAAS5B,GAQX,OAFAb,OAAOiD,iBAAiB,aAAcD,GAE/B,kBAAMhD,OAAOkD,oBAAoB,aAAcF,MACrD,KAEHD,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACXH,EAAY,KACZQ,EAAAA,EAAAA,KACGC,UAAU,CACT7B,KAAAA,EACA8B,UAAWxC,IAEZyC,MAAK,SAACC,GACLZ,EAAYY,EAAI3D,MAChBgD,EAAaY,KAAKC,KAAKF,EAAIG,KAAK1C,MAAQuC,EAAIG,KAAKC,cAElDC,SAAQ,WACPC,YAAW,kBAAMf,GAAW,KAAQ,UAEvC,CAACjC,EAAOU,IAEX,IAAMuC,GAAazC,EAAAA,EAAAA,cAAY,SAACE,EAAWV,GAjD7B,IAACkD,EAAAA,EAkDL,UAAD,OAAWxC,EAAX,kBAAyBV,GAjDlCb,OAAOC,SAASiC,KAAO6B,IAkDpB,IAEH,OACE,iBAAK3E,UAAU,aAAf,WACE,SAAC4E,EAAA,EAAD,IACCnB,IACC,gBAAKzD,UAAU,qBAAf,UACE,SAAC,EAAD,CAAQ0C,WAAS,OAGrB,SAAC,EAAD,CAAU1C,UAAU,kBAAkBQ,KAAM8C,KAC5C,SAAC,EAAD,CACEhC,UAAWA,EACXC,QAASY,EACTV,MAAOA,EACPD,aAAckD,KAEhB,SAACG,EAAA,EAAD,OAKN,OAAevE,EAAAA,EAAAA,MAAKqC,GC5EPmC,EAAAA,WACXC,SAASC,eAAe,SAErBC,QAEH,SAAC,EAAD,M","sources":["entries/enterprise/components/LazyImage/index.tsx","entries/enterprise/components/NewsList/index.tsx","entries/enterprise/components/Pagination/index.tsx","entries/enterprise/components/Loader.tsx","entries/enterprise/list/App.tsx","entries/enterprise/list/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\nimport { memo } from \"react\";\r\nimport cn from \"classnames\";\r\nimport \"./index.less\";\r\n/** https://github.com/aFarkas/lazysizes */\r\nimport \"lazysizes\";\r\nimport \"lazysizes/plugins/parent-fit/ls.parent-fit\";\r\n\r\ninterface Props {\r\n  src: string;\r\n  defaultSrc?: string;\r\n  lazy?: boolean;\r\n  [key: string]: any;\r\n}\r\n\r\nconst placeholder = require(\"./loading.gif\");\r\n\r\nfunction LazyImage(props: Props) {\r\n  const {\r\n    src,\r\n    srcSet,\r\n    className,\r\n    lazy = true,\r\n    defaultSrc = placeholder,\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <img\r\n      src={defaultSrc}\r\n      data-src={src}\r\n      data-srcset={srcSet}\r\n      {...rest}\r\n      className={cn(className, { lazyload: lazy })}\r\n    />\r\n  );\r\n}\r\n\r\nexport default memo(LazyImage);\r\n","import { NewsItem } from \"@/api/enterprise\";\r\nimport { memo } from \"react\";\r\nimport LazyImage from \"../LazyImage\";\r\nimport \"./index.less\";\r\n\r\ninterface Props {\r\n  data?: NewsItem[];\r\n  className?: string;\r\n}\r\n\r\nfunction Members(props: Props) {\r\n  const { data, className = \"\" } = props;\r\n\r\n  return (\r\n    <section\r\n      className={`${className} mt-4 section mx-4 sm:mx-auto sm:max-w-[580px] md:max-w-[720px] lg:max-w-[960px] xl:max-w-[1140px] 2xl:max-w-[1200px]`}\r\n    >\r\n      <div className=\"flex flex-wrap m-auto\">\r\n        {data?.map((item) => (\r\n          <a\r\n            key={item.code}\r\n            href={`${window.location.origin}${process.env.PUBLIC_URL}/enterprise/detail.html?code=${item.code}`}\r\n            className=\"news-item px-[15px] cursor-pointer mb-4 flex-none relative flex w-full sm:w-1/2 flex-col sm:flex-row\"\r\n          >\r\n            <div className=\"news-item-img overflow-hidden flex-none w-full sm:w-[150px] lg:w-[200px] h-[200px] sm:h-full\">\r\n              <LazyImage src={item.img} alt={item.img} />\r\n            </div>\r\n            <div className=\"news-item-info border py-2 sm:py-0 px-3 sm:flex-grow\">\r\n              <div className=\"news-item-info-title font-bold text-lg my-3\">\r\n                {item.title}\r\n              </div>\r\n              <div className=\"news-item-info-keyword text-base\">\r\n                {item.keyword}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default memo(Members);\r\n","import { memo, useCallback, useMemo, useRef } from \"react\";\r\nimport cn from \"classnames\";\r\nimport \"./index.less\";\r\n\r\ninterface Iprops {\r\n  current: number;\r\n  limit: number;\r\n  totalPage: number;\r\n  onPageChange: (page?: number, limit?: number) => any;\r\n}\r\nfunction Pagination(props: Iprops) {\r\n  const { totalPage, current, onPageChange, limit } = props;\r\n  const totalPageRef = useRef(totalPage);\r\n  totalPageRef.current = totalPage;\r\n  const total = useMemo(() => new Array(totalPage).fill(0), [totalPage]);\r\n  const handlePageChange = useCallback(\r\n    (e: any) => {\r\n      const page = Number(e.target.dataset.page);\r\n\r\n      if (page >= 1 && page <= totalPageRef.current) {\r\n        onPageChange(page, limit);\r\n      }\r\n    },\r\n    [onPageChange, limit]\r\n  );\r\n  return (\r\n    <nav aria-label=\"container\">\r\n      <ul\r\n        className=\"pagination mx-auto flex justify-center items-center\"\r\n        onClick={handlePageChange}\r\n      >\r\n        <li\r\n          className={cn(\"page-item-not-active\", {\r\n            \"page-item-disabled\": current === 1,\r\n          })}\r\n          data-page={current - 1}\r\n        >\r\n          «\r\n        </li>\r\n        {total.map((item, index) => (\r\n          <li\r\n            key={index + 1}\r\n            data-page={index + 1}\r\n            className={cn({\r\n              \"page-item-active\": index + 1 === current,\r\n              \"page-item-not-active\": index + 1 !== current,\r\n            })}\r\n          >\r\n            {index + 1}\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={cn(\"page-item-not-active\", {\r\n            \"page-item-disabled\": current === totalPage,\r\n          })}\r\n          data-page={current + 1}\r\n        >\r\n          »\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default memo(Pagination);\r\n","import { memo } from \"react\";\n\ninterface Props {\n  isLoading: boolean;\n  className?: string;\n}\nconst Loader = (props: Props) => {\n  const { isLoading, className = \"\" } = props;\n\n  if (isLoading) {\n    return <i className={`${className} fa fa-spinner fa-spin fa-2x fa-fw`} />;\n  }\n  return null;\n};\n\nexport default memo(Loader);\n","import { memo, useCallback, useEffect, useState } from \"react\";\r\nimport \"./App.less\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { getNewsList, GetNewsListRes } from \"@/api/enterprise\";\r\nimport NewsList from \"../components/NewsList\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst setHash = (str: string) => {\r\n  window.location.hash = str;\r\n};\r\n\r\nfunction App() {\r\n  const params = new URLSearchParams(window.location.hash.replace(\"#\", \"\"));\r\n  const paramsPage = Number(params.get(\"page\")) || 1;\r\n  const paramsLimit = Number(params.get(\"limit\")) || 10;\r\n  const [page, setPage] = useState(paramsPage);\r\n  const [limit, setLimit] = useState(paramsLimit);\r\n  const [newsList, setNewsList] = useState<GetNewsListRes[\"data\"]>();\r\n  const [totalPage, setTotalPage] = useState<number>(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // hash路由变化时，根据路由渲染对应 UI\r\n    function handleHashChange() {\r\n      const params = new URLSearchParams(window.location.hash.replace(\"#\", \"\"));\r\n      const page = Number(params.get(\"page\")) || 1;\r\n      const limit = Number(params.get(\"limit\")) || 10;\r\n      setPage(page);\r\n      setLimit(limit);\r\n    }\r\n\r\n    // handleHashChange(); // 页面加载时不一定触发hashchange事件,这里手动触发一次\r\n\r\n    // 监听路由变化\r\n    window.addEventListener(\"hashchange\", handleHashChange);\r\n\r\n    return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setNewsList([]);\r\n    getNewsList()\r\n      .setParams({\r\n        page,\r\n        page_size: limit,\r\n      })\r\n      .then((res) => {\r\n        setNewsList(res.data);\r\n        setTotalPage(Math.ceil(res.meta.total / res.meta.per_page));\r\n      })\r\n      .finally(() => {\r\n        setTimeout(() => setLoading(false), 100);\r\n      });\r\n  }, [limit, page]);\r\n\r\n  const changeHash = useCallback((page: any, limit: any) => {\r\n    setHash(`#?page=${page}&limit=${limit}`);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"enterprise\">\r\n      <Header />\r\n      {loading && (\r\n        <div className=\"enterprise-loading\">\r\n          <Loader isLoading />\r\n        </div>\r\n      )}\r\n      <NewsList className=\"enterprise-list\" data={newsList} />\r\n      <Pagination\r\n        totalPage={totalPage}\r\n        current={page}\r\n        limit={limit}\r\n        onPageChange={changeHash}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n// import reportWebVitals from '@/reportWebVitals';\r\nimport \"./index.less\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nroot.render(\r\n  // <React.StrictMode>\r\n  <App />\r\n  // </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"names":["placeholder","require","LazyImage","props","src","srcSet","className","lazy","defaultSrc","rest","cn","lazyload","memo","Members","data","map","item","href","window","location","origin","process","code","img","alt","title","keyword","Pagination","totalPage","current","onPageChange","limit","totalPageRef","useRef","total","useMemo","Array","fill","handlePageChange","useCallback","e","page","Number","target","dataset","onClick","index","Loader","isLoading","App","params","URLSearchParams","hash","replace","paramsPage","get","paramsLimit","useState","setPage","setLimit","newsList","setNewsList","setTotalPage","loading","setLoading","useEffect","handleHashChange","addEventListener","removeEventListener","getNewsList","setParams","page_size","then","res","Math","ceil","meta","per_page","finally","setTimeout","changeHash","str","Header","Footer","ReactDOM","document","getElementById","render"],"sourceRoot":""}